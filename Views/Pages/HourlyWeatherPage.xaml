<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:m="clr-namespace:WX.Models.Weather"
             xmlns:mi="http://www.aathifmahir.com/dotnet/2022/maui/icons"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:loc="clr-namespace:WX.Resources.Locales"
             xmlns:converters="clr-namespace:WX.Converters"
             xmlns:controls="clr-namespace:WX.Views.Controls"
             x:Class="WX.Views.Pages.HourlyWeatherPage"
             Style="{DynamicResource ContentPage}">
    <ContentPage.Resources>
        <converters:DateToWeekDayConverter x:Key="DateToWeekDayConverter"/>
        <converters:DateToStringDateConverter x:Key="DateToStringDateConverter"/>
        <converters:TemperatureAddUnitConverter x:Key="TemperatureAddUnitConverter"/>
        <converters:NumberToPercentsConverter x:Key="NumberToPercentsConverter"/>
        <converters:WindAddUnitsConverter x:Key="WindAddUnitsConverter"/>
        <converters:UVIndexToColorConverter x:Key="UVIndexToColorConverter"/>
        <converters:TimeToIsCurrentTimeConverter x:Key="TimeToIsCurrentTimeConverter"/>
        <converters:IsCurrentItemConverter x:Key="IsCurrentItemConverter"/>
        <converters:IsNotCurrentItemConverter x:Key="IsNotCurrentItemConverter"/>
        <converters:IsNamedLocationConverter x:Key="IsNamedLocationConverter"/>
        <converters:IsNotNamedLocationConverter x:Key="IsNotNamedLocationConverter"/>
        <converters:CountryCodeToFlagURLConverter x:Key="CountryCodeToFlagURLConverter"/>
        <converters:WICToIconConverter x:Key="WICToIconConverter"/>
    </ContentPage.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1"
              BindingContext="{Binding CurrentHourlyWeather}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid BindingContext="{Binding BindingContext.LocationWorker.SelectedLocation, Source={RelativeSource AncestorType={x:Type ContentPage}}}">
                    <HorizontalStackLayout IsVisible="{Binding ., Converter={StaticResource IsNamedLocationConverter}}">
                        <Image Source="{Binding CountryCode, Converter={StaticResource CountryCodeToFlagURLConverter}}"
                               WidthRequest="20"
                               HeightRequest="20"
                               VerticalOptions="Center"/>

                        <Label Margin="5,0,0,0"
                               VerticalOptions="Center"
                               Text="{Binding Name}"
                               FontSize="Header"
                               FontFamily="{DynamicResource FontBoldName}"/>
                    </HorizontalStackLayout>

                    <Label IsVisible="{Binding ., Converter={StaticResource IsNotNamedLocationConverter}}"
                           Text="{x:Static loc:Locale.CustomLocationLabel}"/>
                </Grid>

                <VerticalStackLayout Grid.Row="1">
                    <Label FontSize="Large">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding Time, Converter={StaticResource DateToWeekDayConverter}}"
                                      TextColor="{DynamicResource TextColor}"
                                      FontFamily="{DynamicResource FontBoldName}"/>
                                <Span Text=", "
                                      TextColor="{DynamicResource TextMutedColor}"
                                      FontFamily="{DynamicResource FontBoldName}"/>
                                <Span Text="{Binding Time, Converter={StaticResource DateToStringDateConverter}}"
                                      TextColor="{DynamicResource TextMutedColor}"
                                      FontFamily="{DynamicResource FontBoldName}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>

                    <Label Text="{Binding Time, StringFormat='{0:HH:mm}'}"
                           TextColor="{DynamicResource TextMutedColor}"
                           FontFamily="{DynamicResource FontBoldName}"/>
                </VerticalStackLayout>

                <controls:ControlButtonsPanel Grid.RowSpan="2"
                                              Grid.Column="1"
                                              HorizontalOptions="End"
                                              VerticalOptions="Center"/>
            </Grid>

            <VerticalStackLayout Grid.Row="1"
                                 HorizontalOptions="Center"
                                 VerticalOptions="Center">
                <Image Source="{Binding WeatherCode, Converter={StaticResource WICToIconConverter}}"
                       WidthRequest="148"
                       HeightRequest="148">
                    <Image.Behaviors>
                        <toolkit:IconTintColorBehavior TintColor="{StaticResource TextColor}"/>
                    </Image.Behaviors>
                </Image>

                <Label Text="{Binding Temperature2m, Converter={StaticResource TemperatureAddUnitConverter}}"
                       FontSize="48"
                       FontFamily="{DynamicResource FontBoldName}"
                       HorizontalTextAlignment="Center"/>

                <Label FontSize="Subtitle"
                       HorizontalTextAlignment="Center">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{x:Static loc:Locale.ApparentTemperatureLabel}"
                                  FontFamily="{DynamicResource FontLightName}"
                                  TextColor="{DynamicResource TextMutedColor}"/>
                            <Span Text=" "/>
                            <Span Text="{Binding ApparentTemperature, Converter={StaticResource TemperatureAddUnitConverter}}"
                                  FontFamily="{DynamicResource FontLightName}"
                                  TextColor="{DynamicResource TextMutedColor}"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
            </VerticalStackLayout>

            <BoxView Grid.Row="2"
                     Style="{DynamicResource Separator}"
                     Margin="15,0,15,15"/>

            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*"/>
                    <ColumnDefinition Width="0.5*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <HorizontalStackLayout>
                    <Image Source="{mi:Material Icon=WaterDrop, IconColor={StaticResource TextColor}}"/>
                    <Label Style="{DynamicResource PropertyTitle}"
                           Text="{x:Static loc:Locale.HumidityLabel}"/>
                </HorizontalStackLayout>

                <VerticalStackLayout Grid.Column="1">
                    <ProgressBar Progress="{Binding RelativeHumidity2m, Converter={StaticResource NumberToPercentsConverter}}"/>
                    <Label Style="{DynamicResource PropertyHint}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding RelativeHumidity2m}"/>
                                <Span Text=" %"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </VerticalStackLayout>

                <HorizontalStackLayout Grid.Row="1"
                                       Margin="0,5,0,0">
                    <Image Source="{mi:Material Icon=Shower, IconColor={StaticResource TextColor}}"/>
                    <Label Style="{DynamicResource PropertyTitle}"
                           Text="{x:Static loc:Locale.PrecipitationProbabilityLabel}"/>
                </HorizontalStackLayout>

                <VerticalStackLayout Grid.Column="1"
                                     Grid.Row="1"
                                     Margin="0,5,0,0">
                    <ProgressBar Progress="{Binding PrecipitationProbability, Converter={StaticResource NumberToPercentsConverter}}"/>
                    <Label Style="{DynamicResource PropertyHint}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding PrecipitationProbability}"/>
                                <Span Text=" %"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </VerticalStackLayout>

                <HorizontalStackLayout Grid.Row="2"
                                       Margin="0,5,0,0">
                    <Image Source="{mi:Material Icon=Air, IconColor={StaticResource TextColor}}"/>
                    <Label Style="{DynamicResource PropertyTitle}"
                           Text="{x:Static loc:Locale.WindSpeedLabel}"/>
                </HorizontalStackLayout>

                <VerticalStackLayout Grid.Column="1"
                                     Grid.Row="2"
                                     Margin="0,5,0,0"
                                     VerticalOptions="Center">
                    <Label Style="{DynamicResource PropertyHint}"
                           HorizontalOptions="Start"
                           Text="{Binding WindSpeed10m, Converter={StaticResource WindAddUnitsConverter}}"/>
                </VerticalStackLayout>

                <HorizontalStackLayout Grid.Row="3"
                                       Margin="0,5,0,0">
                    <Image Source="{mi:Material Icon=Sunny, IconColor={StaticResource TextColor}}"/>
                    <Label Style="{DynamicResource PropertyTitle}"
                           Text="{x:Static loc:Locale.UVIndexLabel}"/>
                </HorizontalStackLayout>

                <Grid Grid.Column="1"
                      Grid.Row="3"
                      Margin="0,5,0,0"
                      VerticalOptions="Center"
                      HorizontalOptions="Start">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <BoxView WidthRequest="16"
                             HeightRequest="16"
                             BackgroundColor="{Binding UVIndex, Converter={StaticResource UVIndexToColorConverter}}"
                             CornerRadius="8"/>

                    <Label TextColor="{DynamicResource BackgroundColor}"
                           Text="{Binding UVIndex}"
                           VerticalOptions="Center"
                           HorizontalOptions="Center"/>
                </Grid>
            </Grid>

            <BoxView Grid.Row="4"
                     Style="{DynamicResource Separator}"
                     Margin="15,15,15,0"/>

            <Button Grid.Row="5"
                    Style="{DynamicResource TransparentButton}"
                    Margin="15"
                    ImageSource="{mi:Material Icon=KeyboardArrowDown, IconColor={StaticResource TextMutedColor}}"
                    Text="{x:Static loc:Locale.MoreButton}"
                    Command="{Binding BindingContext.OpenDetailsCommand, Source={RelativeSource AncestorType={x:Type ContentPage}}}"/>
        </Grid>

        <CarouselView Grid.Row="2"
                      x:Name="HourlyWeatherPicker"
                      ItemsSource="{Binding Data}"
                      CurrentItem="{Binding CurrentHourlyWeather, Mode=TwoWay}"
                      PeekAreaInsets="{Binding Path=Width, Source={RelativeSource AncestorType={x:Type ContentPage}}}"
                      Loop="False"
                      HorizontalScrollBarVisibility="Never">
            <CarouselView.ItemsLayout>
                <LinearItemsLayout Orientation="Horizontal"
                                   ItemSpacing="20"/>
            </CarouselView.ItemsLayout>

            <CarouselView.ItemTemplate>
                <DataTemplate x:DataType="m:HourlyWeather">
                    <Grid>
                        <VerticalStackLayout HorizontalOptions="Center">
                            <VerticalStackLayout.IsVisible>
                                <MultiBinding Converter="{StaticResource IsCurrentItemConverter}">
                                    <Binding Path="."/>
                                    <Binding Path="CurrentItem" Source="{RelativeSource AncestorType={x:Type CarouselView}}"/>
                                </MultiBinding>
                            </VerticalStackLayout.IsVisible>

                            <Label Text="{x:Static loc:Locale.NowLabel}"
                                   TextColor="{DynamicResource TextMutedColor}"
                                   FontSize="Caption"
                                   FontFamily="{DynamicResource FontLightName}"
                                   IsVisible="{Binding Time, Converter={StaticResource TimeToIsCurrentTimeConverter}}"/>
                            <Label Text="{Binding Temperature2m, Converter={StaticResource TemperatureAddUnitConverter}}"
                                   FontSize="Title"
                                   FontAttributes="Bold"/>
                            <Label Text="{Binding Time, StringFormat='{0:HH:mm}'}"
                                   HorizontalOptions="Center"
                                   TextColor="{DynamicResource TextMutedColor}"/>
                        </VerticalStackLayout>

                        <VerticalStackLayout HorizontalOptions="Center">
                            <VerticalStackLayout.IsVisible>
                                <MultiBinding Converter="{StaticResource IsNotCurrentItemConverter}">
                                    <Binding Path="."/>
                                    <Binding Path="CurrentItem" Source="{RelativeSource AncestorType={x:Type CarouselView}}"/>
                                </MultiBinding>
                            </VerticalStackLayout.IsVisible>

                            <Label Text="{x:Static loc:Locale.NowLabel}"
                                   TextColor="{DynamicResource TextMutedColor}"
                                   FontSize="Caption"
                                   FontFamily="{DynamicResource FontLightName}"
                                   IsVisible="{Binding Time, Converter={StaticResource TimeToIsCurrentTimeConverter}}"/>
                            <Label Text="{Binding Temperature2m, Converter={StaticResource TemperatureAddUnitConverter}}"
                                   TextColor="{DynamicResource TextMutedColor}"
                                   FontSize="Title"
                                   FontAttributes="Bold"/>
                            <Label Text="{Binding Time, StringFormat='{0:HH:mm}'}"
                                   HorizontalOptions="Center"
                                   TextColor="{DynamicResource TextMutedColor}"/>
                        </VerticalStackLayout>
                    </Grid>
                </DataTemplate>
            </CarouselView.ItemTemplate>
        </CarouselView>
    </Grid>
</ContentPage>