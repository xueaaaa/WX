<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:m="clr-namespace:WX.Models.Weather"
             xmlns:mi="http://www.aathifmahir.com/dotnet/2022/maui/icons"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:loc="clr-namespace:WX.Resources.Locales"
             xmlns:converters="clr-namespace:WX.Converters"
             xmlns:controls="clr-namespace:WX.Views.Controls"
             x:Class="WX.Views.Pages.HourlyWeatherPage"
             x:Name="HWeatherPage"
             Style="{DynamicResource ContentPage}">
    <ContentPage.Resources>
        <converters:DateToWeekDayConverter x:Key="DateToWeekDayConverter"/>
        <converters:DateToStringDateConverter x:Key="DateToStringDateConverter"/>
        <converters:TemperatureAddUnitConverter x:Key="TemperatureAddUnitConverter"/>
        <converters:NumberToPercentsConverter x:Key="NumberToPercentsConverter"/>
        <converters:WindAddUnitsConverter x:Key="WindAddUnitsConverter"/>
        <converters:UVIndexToColorConverter x:Key="UVIndexToColorConverter"/>
        <converters:TimeToIsCurrentTimeConverter x:Key="TimeToIsCurrentTimeConverter"/>
        <converters:IsCurrentItemConverter x:Key="IsCurrentItemConverter"/>
        <converters:IsNotCurrentItemConverter x:Key="IsNotCurrentItemConverter"/>
        <converters:IsNamedLocationConverter x:Key="IsNamedLocationConverter"/>
        <converters:IsNotNamedLocationConverter x:Key="IsNotNamedLocationConverter"/>
        <converters:CountryCodeToFlagURLConverter x:Key="CountryCodeToFlagURLConverter"/>
        <converters:WICToIconConverter x:Key="WICToIconConverter"/>
    </ContentPage.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid BindingContext="{Binding CurrentHourlyWeather}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid BindingContext="{Binding BindingContext.LocationWorker.SelectedLocation, Source={RelativeSource AncestorType={x:Type ContentPage}}}">
                    <HorizontalStackLayout IsVisible="{Binding ., Converter={StaticResource IsNamedLocationConverter}}">
                        <Image Source="{Binding CountryCode, Converter={StaticResource CountryCodeToFlagURLConverter}}"
                               WidthRequest="20"
                               HeightRequest="20"
                               VerticalOptions="Center"/>

                        <Label Margin="5,0,0,0"
                               VerticalOptions="Center"
                               Text="{Binding Name}"
                               FontSize="Header"
                               FontFamily="{DynamicResource FontBoldName}"/>
                    </HorizontalStackLayout>

                    <Label IsVisible="{Binding ., Converter={StaticResource IsNotNamedLocationConverter}}"
                           Text="{x:Static loc:Locale.CustomLocationLabel}"/>
                </Grid>

                <VerticalStackLayout Grid.Row="1">
                    <Label FontSize="Large">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding Time, Converter={StaticResource DateToWeekDayConverter}}"
                                      TextColor="{DynamicResource TextColor}"
                                      FontFamily="{DynamicResource FontBoldName}"/>
                                <Span Text=", "
                                      TextColor="{DynamicResource TextMutedColor}"
                                      FontFamily="{DynamicResource FontBoldName}"/>
                                <Span Text="{Binding Time, Converter={StaticResource DateToStringDateConverter}}"
                                      TextColor="{DynamicResource TextMutedColor}"
                                      FontFamily="{DynamicResource FontBoldName}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>

                    <Label Text="{Binding Time, StringFormat='{0:HH:mm}'}"
                           TextColor="{DynamicResource TextMutedColor}"
                           FontFamily="{DynamicResource FontBoldName}"/>
                </VerticalStackLayout>

                <controls:ControlButtonsPanel Grid.RowSpan="2"
                                              Grid.Column="1"
                                              HorizontalOptions="End"
                                              VerticalOptions="Center"/>
            </Grid>

            <VerticalStackLayout Grid.Row="1"
                                 HorizontalOptions="Center"
                                 VerticalOptions="Center">
                <Image Style="{DynamicResource WeatherIconImage}"
                       Source="{Binding WeatherCode, Converter={StaticResource WICToIconConverter}}"
                       x:Name="weatherIcon">
                    <Image.Behaviors>
                        <toolkit:IconTintColorBehavior TintColor="{Binding BindingContext.WeatherIconColor, Source={x:Reference weatherIcon}}"/>
                    </Image.Behaviors>
                </Image>

                <Label Style="{DynamicResource ActualTemperatureLabel}"
                       Text="{Binding Temperature2m, Converter={StaticResource TemperatureAddUnitConverter}}"/>

                <Label FontSize="Subtitle"
                       HorizontalTextAlignment="Center">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{x:Static loc:Locale.ApparentTemperatureLabel}"
                                  FontFamily="{DynamicResource FontLightName}"
                                  TextColor="{DynamicResource TextMutedColor}"/>
                            <Span Text=" "/>
                            <Span Text="{Binding ApparentTemperature, Converter={StaticResource TemperatureAddUnitConverter}}"
                                  FontFamily="{DynamicResource FontLightName}"
                                  TextColor="{DynamicResource TextMutedColor}"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
            </VerticalStackLayout>

            <BoxView Grid.Row="2"
                     Style="{DynamicResource UpWeatherPageSeparator}"/>

            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*"/>
                    <ColumnDefinition Width="0.5*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <HorizontalStackLayout>
                    <Image Source="{mi:Material Icon=WaterDrop, IconColor={StaticResource TextColor}}"/>
                    <Label Style="{DynamicResource PropertyTitle}"
                           Text="{x:Static loc:Locale.HumidityLabel}"/>
                </HorizontalStackLayout>

                <VerticalStackLayout Grid.Column="1">
                    <ProgressBar Progress="{Binding RelativeHumidity2m, Converter={StaticResource NumberToPercentsConverter}}"/>
                    <Label Style="{DynamicResource PropertyHint}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding RelativeHumidity2m}"/>
                                <Span Text=" %"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </VerticalStackLayout>

                <HorizontalStackLayout Grid.Row="1"
                                       Margin="0,5,0,0">
                    <Image Source="{mi:Material Icon=Shower, IconColor={StaticResource TextColor}}"/>
                    <Label Style="{DynamicResource PropertyTitle}"
                           Text="{x:Static loc:Locale.PrecipitationProbabilityLabel}"/>
                </HorizontalStackLayout>

                <VerticalStackLayout Grid.Column="1"
                                     Grid.Row="1"
                                     Margin="0,5,0,0">
                    <ProgressBar Progress="{Binding PrecipitationProbability, Converter={StaticResource NumberToPercentsConverter}}"/>
                    <Label Style="{DynamicResource PropertyHint}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding PrecipitationProbability}"/>
                                <Span Text=" %"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </VerticalStackLayout>

                <HorizontalStackLayout Grid.Row="2"
                                       Margin="0,5,0,0">
                    <Image Source="{mi:Material Icon=Air, IconColor={StaticResource TextColor}}"/>
                    <Label Style="{DynamicResource PropertyTitle}"
                           Text="{x:Static loc:Locale.WindSpeedLabel}"/>
                </HorizontalStackLayout>

                <VerticalStackLayout Grid.Column="1"
                                     Grid.Row="2"
                                     Margin="0,5,0,0"
                                     VerticalOptions="Center">
                    <Label Style="{DynamicResource PropertyHint}"
                           HorizontalOptions="Start"
                           Text="{Binding WindSpeed10m, Converter={StaticResource WindAddUnitsConverter}}"/>
                </VerticalStackLayout>

                <HorizontalStackLayout Grid.Row="3"
                                       Margin="0,5,0,0">
                    <Image Source="{mi:Material Icon=Sunny, IconColor={StaticResource TextColor}}"/>
                    <Label Style="{DynamicResource PropertyTitle}"
                           Text="{x:Static loc:Locale.UVIndexLabel}"/>
                </HorizontalStackLayout>

                <Grid Grid.Column="1"
                      Grid.Row="3"
                      Margin="0,5,0,0"
                      VerticalOptions="Center"
                      HorizontalOptions="Start">
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding BindingContext.MoreAboutUVCommand, Source={RelativeSource AncestorType={x:Type ContentPage}}}"/>
                    </Grid.GestureRecognizers>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <BoxView WidthRequest="16"
                             HeightRequest="16"
                             BackgroundColor="{Binding UVIndex, Converter={StaticResource UVIndexToColorConverter}}"
                             CornerRadius="8"/>

                    <Label TextColor="{DynamicResource BackgroundColor}"
                           Text="{Binding UVIndex}"
                           VerticalOptions="Center"
                           HorizontalOptions="Center"/>
                </Grid>
            </Grid>

            <BoxView Grid.Row="4"
                     Style="{DynamicResource DownWeatherPageSeparator}"
                     Margin="15,15,15,0"/>

            <Button Grid.Row="5"
                    Style="{DynamicResource TransparentButton}"
                    Margin="15"
                    ImageSource="{mi:Material Icon=KeyboardArrowDown, IconColor={StaticResource TextMutedColor}}"
                    Text="{x:Static loc:Locale.MoreButton}"
                    Command="{Binding BindingContext.OpenDetailsCommand, Source={RelativeSource AncestorType={x:Type ContentPage}}}"/>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.25*"/>
                <ColumnDefinition Width="0.15*"/>
                <ColumnDefinition Width="0.6*"/>
            </Grid.ColumnDefinitions>

            <DatePicker MinimumDate="{Binding MinDate}"
                        MaximumDate="{Binding MaxDate}"
                        Date="{Binding SelectedDate, Mode=TwoWay}"
                        Format="M"/>

            <Picker Grid.Column="1"
                    ItemsSource="{Binding Times}"
                    SelectedItem="{Binding SelectedTime, Mode=TwoWay}">
                <Picker.ItemDisplayBinding>
                    <MultiBinding StringFormat="{}{0}:{1:00;00}">
                        <Binding Path="Hours"/>
                        <Binding Path="Minutes"/>
                    </MultiBinding>
                </Picker.ItemDisplayBinding>
            </Picker>

            <CollectionView Grid.Column="2"
                            HorizontalOptions="Center"
                            VerticalOptions="Center"
                            ItemsSource="{Binding WeatherForecast}"
                            SelectionMode="None">
                <CollectionView.EmptyView>
                    <controls:EmptyCollectionPanel/>
                </CollectionView.EmptyView>

                <CollectionView.ItemsLayout>
                    <LinearItemsLayout Orientation="Horizontal"
                                       ItemSpacing="7"/>
                </CollectionView.ItemsLayout>

                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="{x:Type m:HourlyWeather}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Image Source="{Binding WeatherCode, Converter={StaticResource WICToIconConverter}}"
                                   WidthRequest="18"
                                   HeightRequest="18"
                                   x:Name="forecastWeatherIcon">
                                <Image.Behaviors>
                                    <toolkit:IconTintColorBehavior TintColor="{Binding BindingContext.WeatherIconColor, Source={x:Reference forecastWeatherIcon}}"/>
                                </Image.Behaviors>
                            </Image>

                            <Label Grid.Column="1"
                                   VerticalOptions="End"
                                   Text="{Binding Temperature2m, Converter={StaticResource TemperatureAddUnitConverter}}"
                                   FontFamily="{DynamicResource FontBoldName}"
                                   FontSize="14"/>

                            <Label Grid.Column="1"
                                   Grid.Row="1"
                                   Text="{Binding Time, StringFormat='{0:t}'}"
                                   TextColor="{DynamicResource TextMutedColor}"
                                   FontFamily="{DynamicResource FontLightName}"
                                   FontSize="Caption"/>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </Grid>
    </Grid>
</ContentPage>